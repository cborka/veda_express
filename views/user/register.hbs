<div class="form_background">

{{!-- <h1> Регистрация </h1> --}}
<br>
<br>
<br>
<form name="userreg" action="/user/register" method="POST" class="form">

<fieldset>
 <legend>&nbsp; Регистрация &nbsp;</legend>
    <br>
    <div hidden>
        <label>Id</label>
        <input id="id" name="id" type="number" value="0" readonly >
    </div>
    <div>
        <label>Логин</label>
        <input id="login" type="text" name="login" placeholder="Такое как alex или vlad" value="" maxlength="31" onchange="check_login_free()"> 
        <span id="isloginfree" class="red"></span>
    </div>
    <div>
        <label>Почта (email)</label>
        <input id="email" type="email" name="email" placeholder="my@email" value="" maxlength="63" onchange="check_email_free()">
        <span id="isemailfree" class="red"></span>
    </div>
    <div>
        <label>Пароль</label>
        <input id="password" type="password" name="password" placeholder="***" value=""  onchange="check_data()" >
    </div>
    <div>
        <label>Подтверждение пароля</label>
        <input id="password2" type="password" name="password2" placeholder="***" value="" onchange="check_data()" >
    </div>
    <div>
        <label>А вы не робот? Проверка</label>
        <input id="test" type="number" name="test" placeholder="12 х 12 =" value="" maxlength="63" onchange="check_data()" >
    </div>
    <div>
        <label>Ваше имя</label>
        <input id="name" type="text" name="fio" placeholder="Иван Иванов" value=""  onchange="check_data()" >
    </div>
    <div>
        <label> </label>
        <input type="submit" id="submit" value="Регистрация" >
        <input type="button" value="Отмена" >
        <input type="button" value="Назад" onclick="back()">
    </div>
    <div>
        <span class="hint" id="hint"></span>&nbsp;
        <span class="error" id="error"></span>
    </div>
</fieldset>
</form>

<br><br>

<!--<button onclick="atest()">atest</button>-->
<button onclick="test1()">test1</button>
<br><br>
<button onclick="fetch23()">ajax</button>
<button onclick="check_data()">fetch</button>

</div>
  

<script>

// Назад
async function back() {

// similar behavior as an HTTP redirect
//window.location.replace("http://stackoverflow.com");

// similar behavior as clicking on a link
//window.location.href = "http://stackoverflow.com";


    myFetch2('/back')
    .then()
    .catch((x) => {});
    //.catch(show_error);
}


// Инициализация документа
const set_init_doc = function (reply)
{
    //alert(reply);
    document.getElementById("isloginfree").innerHTML = reply;

};
function fetch23()
{
    doQuery ("/user/isLoginFree", set_init_doc,
        "name=Mike"
//        "&doc_name=" + encodeURIComponent("zxcv")
//        "&doc_name=" + encodeURIComponent(document.getElementById("doc_name").innerHTML)
    );
}


// Проверка, свободно ли имя (логин)
async function check_login_free() {

    myFetch2('/user/isLoginFree', {login: userreg.login.value.trim()})
    .then((x) => {
        document.getElementById("isloginfree").innerHTML = (x == 0) ? '' : 'Логин занят';
    })
    .catch((x) => {});
    //.catch(show_error);
}

// Проверка, свободна ли почта
async function check_email_free() {

    myFetch2('/user/isEmailFree', {email: userreg.email.value.trim()})
    .then((x) => {
        document.getElementById("isemailfree").innerHTML = (x == 0) ? '' : 'Такая почта уже есть';
    })
    .catch((x) => {});
}

//
//  Правильный ли формат email
//
function validate_email(email) {
    let re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
}

//
//  Просто выводит сообщение
//
function info(str)
{
    hint(str);
    //document.getElementById("hint").innerHTML=str;
}
function err(str)
{
    document.getElementById("error").innerHTML=str;
}

//
//  Проверка правильности занесения данных
//
function check_data()
{
    userreg.submit.disabled = true;

    if (userreg.login.value.length < 3) {
        err("Поле 'Login' слишком короткое, меньше трёх символов");
        return false;
    }
    if (!validate_email(userreg.email.value)) {
        err("Формат email неверный");
        return false;
    }
    if (userreg.password.value === "") {
        err("Пароль не заполнен");
        return false;
    }
    if (userreg.password.value !== userreg.password2.value) {
        err("Пароли не совпадают");
        return false;
    }
    if (userreg.test.value != 144) {
        err("А вы не робот случайно?");
        return false;
    }
    if (document.getElementById("isloginfree").innerHTML != '') {
        err("Похоже, что этот логин уже занят, придумайте другой.");
        return false;
    }
    //if ($("#isloginfree").text() !== '') {
    //    return false;
    //}
    //if ($("#isemailfree").text() !== '') {
    //    return false;
    //} 

    err('');
    info("ОК, с ваших слов заполнено верно.");
    userreg.submit.disabled = false;
    return true;
}


</script>
